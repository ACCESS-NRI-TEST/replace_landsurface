name: CD

on:
    push:
      tags:
        - '**'

jobs:
  release-conda-package:
    name: Build with conda and upload to anaconda.org
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
            fetch-tags: true
            fetch-depth: 0 

      - name: Setup conda environment
        uses: conda-incubator/setup-miniconda@11b562958363ec5770fef326fe8ef0366f8cbf8a
        with:
          miniconda-version: "latest"
          python-version: ${{ vars.PY_VERSION }}
          environment-file: .conda/env_build.yml
          auto-update-conda: false
          auto-activate-base: false
          show-channel-urls: true

      - name: Build and upload the conda package
        uses: uibcdf/action-build-and-upload-conda-packages@c6e7a90ad5e599d6cde76e130db4ee52ad733ecf
        with:
          meta_yaml_dir: .conda
          python-version: ${{ vars.PY_VERSION }}
          user: accessnri
          label: main
          token: ${{ secrets.ANACONDA_TOKEN }}
 
  # Dispatch the access-ram-condaenv repo (within the same GitHub organization) to update the conda environment 
  # and deploy the new conda environment
  dispatch-access-ram-condaenv:
    name: Dispatch the ${{ github.repository_owner }}/access-ram-condaenv repo
    runs-on: ubuntu-latest
    needs: release-conda-package
    steps:
    - name: Dispatch repo
      uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0 # v3.0.0
      with:
        token: ${{ secrets.REPO_ACCESS_TOKEN }}
        repository: ${{ github.repository_owner }}/access-ram-condaenv
        event-type: release
        client-payload: |
          '{
            "dependency": "$(yq -oy '.project.name' pyproject.toml)",
            "version": "${{github.ref_name}}",
            "token": "${{secrets.REPO_ACCESS_TOKEN}}"
          }'